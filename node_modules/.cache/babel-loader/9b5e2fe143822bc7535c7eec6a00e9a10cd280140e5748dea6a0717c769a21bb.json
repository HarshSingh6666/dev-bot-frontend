{"ast":null,"code":"var _jsxFileName = \"D:\\\\Allfolder\\\\gemini\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [history, setHistory] = useState([]); // {role, text}\n  const [loading, setLoading] = useState(false);\n  const send = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setHistory(h => [...h, {\n      role: 'user',\n      text: userMessage\n    }]);\n    setInput('');\n    setLoading(true);\n    try {\n      const body = {\n        // simple chat format. Backend expects `messages` array or `prompt`.\n        messages: [{\n          role: 'user',\n          parts: [{\n            text: userMessage\n          }]\n        }]\n      };\n      const resp = await fetch('http://localhost:4000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const json = await resp.json();\n      const reply = json.reply || JSON.stringify(json.raw || json);\n      setHistory(h => [...h, {\n        role: 'assistant',\n        text: reply\n      }]);\n    } catch (err) {\n      setHistory(h => [...h, {\n        role: 'assistant',\n        text: 'Error: ' + err.message\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 720,\n      margin: '2rem auto',\n      fontFamily: 'system-ui, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gemini Chatbot (React + Node)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: 300,\n        border: '1px solid #ddd',\n        padding: 12,\n        borderRadius: 8\n      },\n      children: [history.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#666'\n        },\n        children: \"Say hi \\uD83D\\uDC4B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 26\n      }, this), history.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '8px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            textTransform: 'capitalize'\n          },\n          children: [m.role, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: m.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 1\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 1\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        style: {\n          flex: 1,\n          padding: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: send,\n        disabled: loading,\n        style: {\n          marginLeft: 8,\n          padding: '8px 12px'\n        },\n        children: loading ? '...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 1\n  }, this);\n}\n_s(App, \"Ksca2EfJ939QhZO4kruEfwF+M4I=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","input","setInput","history","setHistory","loading","setLoading","send","trim","userMessage","h","role","text","body","messages","parts","resp","fetch","method","headers","JSON","stringify","json","reply","raw","err","message","style","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","minHeight","border","padding","borderRadius","length","color","map","m","i","textTransform","whiteSpace","display","marginTop","value","onChange","e","target","flex","onClick","disabled","marginLeft","_c","$RefreshReg$"],"sources":["D:/Allfolder/gemini/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nexport default function App() {\r\nconst [input, setInput] = useState('');\r\nconst [history, setHistory] = useState([]); // {role, text}\r\nconst [loading, setLoading] = useState(false);\r\n\r\n\r\nconst send = async () => {\r\nif (!input.trim()) return;\r\nconst userMessage = input.trim();\r\nsetHistory(h => [...h, { role: 'user', text: userMessage }]);\r\nsetInput('');\r\nsetLoading(true);\r\n\r\n\r\ntry {\r\nconst body = {\r\n// simple chat format. Backend expects `messages` array or `prompt`.\r\nmessages: [{ role: 'user', parts: [{ text: userMessage }] }]\r\n};\r\n\r\n\r\nconst resp = await fetch('http://localhost:4000/api/chat', {\r\nmethod: 'POST',\r\nheaders: { 'Content-Type': 'application/json' },\r\nbody: JSON.stringify(body)\r\n});\r\n\r\n\r\nconst json = await resp.json();\r\nconst reply = json.reply || JSON.stringify(json.raw || json);\r\n\r\n\r\nsetHistory(h => [...h, { role: 'assistant', text: reply }]);\r\n} catch (err) {\r\nsetHistory(h => [...h, { role: 'assistant', text: 'Error: ' + err.message }]);\r\n} finally {\r\nsetLoading(false);\r\n}\r\n};\r\n\r\n\r\nreturn (\r\n<div style={{ maxWidth: 720, margin: '2rem auto', fontFamily: 'system-ui, sans-serif' }}>\r\n<h2>Gemini Chatbot (React + Node)</h2>\r\n<div style={{ minHeight: 300, border: '1px solid #ddd', padding: 12, borderRadius: 8 }}>\r\n{history.length === 0 && <div style={{ color: '#666' }}>Say hi ðŸ‘‹</div>}\r\n{history.map((m, i) => (\r\n<div key={i} style={{ margin: '8px 0' }}>\r\n<b style={{ textTransform: 'capitalize' }}>{m.role}:</b>\r\n<div style={{ whiteSpace: 'pre-wrap' }}>{m.text}</div>\r\n</div>\r\n))}\r\n</div>\r\n\r\n\r\n<div style={{ display: 'flex', marginTop: 12 }}>\r\n<input value={input} onChange={e => setInput(e.target.value)} style={{ flex: 1, padding: 8 }} />\r\n<button onClick={send} disabled={loading} style={{ marginLeft: 8, padding: '8px 12px' }}>\r\n{loading ? '...' : 'Send'}\r\n</button>\r\n</div>\r\n</div>\r\n);\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAG7C,MAAMW,IAAI,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAAC,EAAE;IACnB,MAAMC,WAAW,GAAGR,KAAK,CAACO,IAAI,CAAC,CAAC;IAChCJ,UAAU,CAACM,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEH;IAAY,CAAC,CAAC,CAAC;IAC5DP,QAAQ,CAAC,EAAE,CAAC;IACZI,UAAU,CAAC,IAAI,CAAC;IAGhB,IAAI;MACJ,MAAMO,IAAI,GAAG;QACb;QACAC,QAAQ,EAAE,CAAC;UAAEH,IAAI,EAAE,MAAM;UAAEI,KAAK,EAAE,CAAC;YAAEH,IAAI,EAAEH;UAAY,CAAC;QAAE,CAAC;MAC3D,CAAC;MAGD,MAAMO,IAAI,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CN,IAAI,EAAEO,IAAI,CAACC,SAAS,CAACR,IAAI;MACzB,CAAC,CAAC;MAGF,MAAMS,IAAI,GAAG,MAAMN,IAAI,CAACM,IAAI,CAAC,CAAC;MAC9B,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,IAAIH,IAAI,CAACC,SAAS,CAACC,IAAI,CAACE,GAAG,IAAIF,IAAI,CAAC;MAG5DlB,UAAU,CAACM,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE;QAAEC,IAAI,EAAE,WAAW;QAAEC,IAAI,EAAEW;MAAM,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAOE,GAAG,EAAE;MACdrB,UAAU,CAACM,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE;QAAEC,IAAI,EAAE,WAAW;QAAEC,IAAI,EAAE,SAAS,GAAGa,GAAG,CAACC;MAAQ,CAAC,CAAC,CAAC;IAC7E,CAAC,SAAS;MACVpB,UAAU,CAAC,KAAK,CAAC;IACjB;EACA,CAAC;EAGD,oBACAR,OAAA;IAAK6B,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,WAAW;MAAEC,UAAU,EAAE;IAAwB,CAAE;IAAAC,QAAA,gBACxFjC,OAAA;MAAAiC,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCrC,OAAA;MAAK6B,KAAK,EAAE;QAAES,SAAS,EAAE,GAAG;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAR,QAAA,GACtF5B,OAAO,CAACqC,MAAM,KAAK,CAAC,iBAAI1C,OAAA;QAAK6B,KAAK,EAAE;UAAEc,KAAK,EAAE;QAAO,CAAE;QAAAV,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACtEhC,OAAO,CAACuC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAClB9C,OAAA;QAAa6B,KAAK,EAAE;UAAEE,MAAM,EAAE;QAAQ,CAAE;QAAAE,QAAA,gBACxCjC,OAAA;UAAG6B,KAAK,EAAE;YAAEkB,aAAa,EAAE;UAAa,CAAE;UAAAd,QAAA,GAAEY,CAAC,CAAChC,IAAI,EAAC,GAAC;QAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxDrC,OAAA;UAAK6B,KAAK,EAAE;YAAEmB,UAAU,EAAE;UAAW,CAAE;UAAAf,QAAA,EAAEY,CAAC,CAAC/B;QAAI;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAF5CS,CAAC;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGN,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAGNrC,OAAA;MAAK6B,KAAK,EAAE;QAAEoB,OAAO,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAG,CAAE;MAAAjB,QAAA,gBAC/CjC,OAAA;QAAOmD,KAAK,EAAEhD,KAAM;QAACiD,QAAQ,EAAEC,CAAC,IAAIjD,QAAQ,CAACiD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACtB,KAAK,EAAE;UAAE0B,IAAI,EAAE,CAAC;UAAEf,OAAO,EAAE;QAAE;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChGrC,OAAA;QAAQwD,OAAO,EAAE/C,IAAK;QAACgD,QAAQ,EAAElD,OAAQ;QAACsB,KAAK,EAAE;UAAE6B,UAAU,EAAE,CAAC;UAAElB,OAAO,EAAE;QAAW,CAAE;QAAAP,QAAA,EACvF1B,OAAO,GAAG,KAAK,GAAG;MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEN;AAACnC,EAAA,CA/DuBD,GAAG;AAAA0D,EAAA,GAAH1D,GAAG;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}