{"ast":null,"code":"var _jsxFileName = \"D:\\\\Allfolder\\\\gemini\\\\frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\n// Chat.jsx\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport \"./Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]); // Session-only messages\n  const [history, setHistory] = useState([]); // Saved history from backend\n  const [loading, setLoading] = useState(false);\n  const [image, setImage] = useState(null);\n  const fileInputRef = useRef();\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"token\");\n\n  // Redirect to login if no token\n  useEffect(() => {\n    if (!token || token === \"undefined\" || token === \"null\") {\n      navigate(\"/login\", {\n        replace: true\n      });\n    }\n  }, []);\n\n  // Fetch chat history from backend\n  // Sidebar only\n  useEffect(() => {\n    const fetchHistory = async () => {\n      if (!token) return;\n      try {\n        const resp = await fetch(\"http://localhost:5000/api/history\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await resp.json();\n        setHistory(Array.isArray(data) ? data : []);\n      } catch (err) {\n        console.error(\"Error fetching history:\", err);\n      }\n    };\n    fetchHistory();\n  }, [token]);\n\n  // Send message or image\n  const send = async () => {\n    if (!input.trim() && !image) return;\n    const userMessage = {\n      role: \"user\",\n      text: input.trim(),\n      image\n    };\n    setMessages(m => [...m, userMessage]);\n    setInput(\"\");\n    setImage(null);\n    setLoading(true);\n    try {\n      let reply = \"⚠️ No response\";\n      if (image) {\n        const formData = new FormData();\n        formData.append(\"image\", image);\n        formData.append(\"prompt\", input || \"Describe this image\");\n        const resp = await fetch(\"http://localhost:5000/api/upload\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          body: formData\n        });\n        const json = await resp.json();\n        reply = json.reply || reply;\n      } else {\n        const body = {\n          prompt: userMessage.text\n        };\n        const resp = await fetch(\"http://localhost:5000/api/chat\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify(body)\n        });\n        const json = await resp.json();\n        reply = json.reply || reply;\n      }\n      setMessages(m => [...m, {\n        role: \"assistant\",\n        text: reply\n      }]);\n    } catch (err) {\n      setMessages(m => [...m, {\n        role: \"assistant\",\n        text: \"❌ Error: \" + err.message\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle Enter key to send\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      send();\n    }\n  };\n\n  // ✅ Save current chat to backend\n  const saveChat = async () => {\n    if (!messages.length) return;\n    try {\n      const resp = await fetch(\"http://localhost:5000/api/save\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          messages\n        })\n      });\n      const data = await resp.json();\n      if (data.success) {\n        alert(\"✅ Chat saved to history!\");\n\n        // Update sidebar history with saved messages\n        setHistory(prev => [...prev, ...messages]);\n\n        // Clear current chat session\n        setMessages([]);\n      } else {\n        alert(\"❌ Failed to save chat.\");\n      }\n    } catch (err) {\n      console.error(\"Error saving chat:\", err);\n      alert(\"❌ Error while saving chat.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      allHistory: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: \"Devbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\",\n          children: \"Say hi \\uD83D\\uDC4B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this), messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${m.role}`,\n          children: [m.image && typeof m.image === \"string\" && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: m.image,\n            alt: \"upload\",\n            className: \"chat-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 9\n          }, this), m.image && m.image instanceof File && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(m.image),\n            alt: \"upload\",\n            className: \"chat-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bubble\",\n            children: m.text || m.userMessage || m.botReply\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 7\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 5\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"\\u23F3 Thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: scrollRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn\",\n            onClick: () => fileInputRef.current.click(),\n            children: \"\\uD83D\\uDCCE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            style: {\n              display: \"none\"\n            },\n            accept: \"image/*\",\n            onChange: e => setImage(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-btn\",\n            onClick: send,\n            disabled: loading,\n            children: loading ? \"...\" : \"➤\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-chat-btn\",\n        onClick: saveChat,\n        disabled: messages.length === 0,\n        children: \"\\uD83D\\uDCBE Save Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"5Au5pRP9gyRb2mHX7jAfbPUHSw8=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","Sidebar","jsxDEV","_jsxDEV","Chat","_s","input","setInput","messages","setMessages","history","setHistory","loading","setLoading","image","setImage","fileInputRef","navigate","token","localStorage","getItem","replace","fetchHistory","resp","fetch","headers","Authorization","data","json","Array","isArray","err","console","error","send","trim","userMessage","role","text","m","reply","formData","FormData","append","method","body","prompt","JSON","stringify","message","handleKeyDown","e","key","shiftKey","preventDefault","saveChat","length","success","alert","prev","className","children","allHistory","fileName","_jsxFileName","lineNumber","columnNumber","map","i","src","alt","File","URL","createObjectURL","botReply","ref","scrollRef","value","onChange","target","onKeyDown","placeholder","onClick","current","click","type","style","display","accept","files","disabled","_c","$RefreshReg$"],"sources":["D:/Allfolder/gemini/frontend/src/components/Chat.jsx"],"sourcesContent":["// Chat.jsx\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport \"./Style.css\";\r\n\r\nexport default function Chat() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]); // Session-only messages\r\n  const [history, setHistory] = useState([]);   // Saved history from backend\r\n  const [loading, setLoading] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n  const fileInputRef = useRef();\r\n  const navigate = useNavigate();\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // Redirect to login if no token\r\n  useEffect(() => {\r\n    if (!token || token === \"undefined\" || token === \"null\") {\r\n      navigate(\"/login\", { replace: true });\r\n    }\r\n  }, []);\r\n\r\n  // Fetch chat history from backend\r\n  // Sidebar only\r\nuseEffect(() => {\r\n  const fetchHistory = async () => {\r\n    if (!token) return;\r\n\r\n    try {\r\n      const resp = await fetch(\"http://localhost:5000/api/history\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const data = await resp.json();\r\n\r\n      setHistory(Array.isArray(data) ? data : []);\r\n    } catch (err) {\r\n      console.error(\"Error fetching history:\", err);\r\n    }\r\n  };\r\n\r\n  fetchHistory();\r\n}, [token]);\r\n\r\n\r\n  // Send message or image\r\n  const send = async () => {\r\n    if (!input.trim() && !image) return;\r\n\r\n    const userMessage = { role: \"user\", text: input.trim(), image };\r\n    setMessages((m) => [...m, userMessage]);\r\n\r\n    setInput(\"\");\r\n    setImage(null);\r\n    setLoading(true);\r\n\r\n    try {\r\n      let reply = \"⚠️ No response\";\r\n\r\n      if (image) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image);\r\n        formData.append(\"prompt\", input || \"Describe this image\");\r\n\r\n        const resp = await fetch(\"http://localhost:5000/api/upload\", {\r\n          method: \"POST\",\r\n          headers: { Authorization: `Bearer ${token}` },\r\n          body: formData,\r\n        });\r\n\r\n        const json = await resp.json();\r\n        reply = json.reply || reply;\r\n      } else {\r\n        const body = { prompt: userMessage.text };\r\n\r\n        const resp = await fetch(\"http://localhost:5000/api/chat\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify(body),\r\n        });\r\n\r\n        const json = await resp.json();\r\n        reply = json.reply || reply;\r\n      }\r\n\r\n      setMessages((m) => [...m, { role: \"assistant\", text: reply }]);\r\n    } catch (err) {\r\n      setMessages((m) => [\r\n        ...m,\r\n        { role: \"assistant\", text: \"❌ Error: \" + err.message },\r\n      ]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle Enter key to send\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      send();\r\n    }\r\n  };\r\n\r\n  // ✅ Save current chat to backend\r\n  const saveChat = async () => {\r\n    if (!messages.length) return;\r\n\r\n    try {\r\n      const resp = await fetch(\"http://localhost:5000/api/save\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ messages }),\r\n      });\r\n\r\n      const data = await resp.json();\r\n\r\n      if (data.success) {\r\n        alert(\"✅ Chat saved to history!\");\r\n\r\n        // Update sidebar history with saved messages\r\n        setHistory((prev) => [...prev, ...messages]);\r\n\r\n        // Clear current chat session\r\n        setMessages([]);\r\n      } else {\r\n        alert(\"❌ Failed to save chat.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error saving chat:\", err);\r\n      alert(\"❌ Error while saving chat.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Sidebar allHistory={history} />\r\n\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">\r\n          <h2 className=\"title\">Devbot</h2>\r\n        </div>\r\n<div className=\"chat-box\">\r\n  {messages.length === 0 && <div className=\"placeholder\">Say hi 👋</div>}\r\n\r\n  {messages.map((m, i) => (\r\n    <div key={i} className={`message ${m.role}`}>\r\n      {m.image && typeof m.image === \"string\" && (\r\n        <img src={m.image} alt=\"upload\" className=\"chat-image\" />\r\n      )}\r\n      {m.image && m.image instanceof File && (\r\n        <img\r\n          src={URL.createObjectURL(m.image)}\r\n          alt=\"upload\"\r\n          className=\"chat-image\"\r\n        />\r\n      )}\r\n      <div className=\"bubble\">\r\n        {m.text || m.userMessage || m.botReply}\r\n      </div>\r\n    </div>\r\n  ))}\r\n\r\n  {loading && <div className=\"loading\">⏳ Thinking...</div>}\r\n\r\n  {/* ✅ This ensures auto scroll to bottom */}\r\n  <div ref={scrollRef} />\r\n</div>\r\n\r\n        <div className=\"input-area\">\r\n          <textarea\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"Type a message...\"\r\n          />\r\n          <div className=\"actions\">\r\n            <button\r\n              className=\"upload-btn\"\r\n              onClick={() => fileInputRef.current.click()}\r\n            >\r\n              📎\r\n            </button>\r\n            <input\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              style={{ display: \"none\" }}\r\n              accept=\"image/*\"\r\n              onChange={(e) => setImage(e.target.files[0])}\r\n            />\r\n            <button className=\"send-btn\" onClick={send} disabled={loading}>\r\n              {loading ? \"...\" : \"➤\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/* ✅ Save Chat Button */}\r\n          <button\r\n            className=\"save-chat-btn\"\r\n            onClick={saveChat}\r\n            disabled={messages.length === 0}\r\n          >\r\n            💾 Save Chat\r\n          </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}